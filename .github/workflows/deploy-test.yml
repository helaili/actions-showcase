name: Deploy a review app on Azure

on:
  deployment

jobs:

  update_status:
    name: Deployment status update
    if: github.event.deployment.environment == 'test'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/github-script@0.8.0
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let run = process.env.GITHUB_RUN_ID
          let log_url = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${run}`
          github.repos.createDeploymentStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            mediaType: {
              previews: ["flash-preview", "ant-man"]
            },
            deployment_id: context.payload.deployment.id,
            state: 'in_progress',
            description: 'Deployment from GitHub Actions started', 
            target_url: log_url,
            log_url: log_url
          })
  
  container:
    name: Build & publish container
    needs: update_status
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag docker.pkg.github.com/$GITHUB_REPOSITORY/actions-showcase:$GITHUB_SHA
    - name: Publish to GitHub Package Registry
      env:
        DOCKER_TOKEN: ${{secrets.GITHUB_TOKEN}}
        DOCKER_USER: <token>
      run: |
        docker login docker.pkg.github.com -u $DOCKER_USER -p $DOCKER_TOKEN
        docker push docker.pkg.github.com/$GITHUB_REPOSITORY/actions-showcase:$GITHUB_SHA
  
  azure_create_app:
    name: Create the review app on Azure
    needs: update_status
    runs-on: ubuntu-latest
    steps:
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Create the review app
      env:
        RESOURCE_GROUP: actions-showcase
        APP_SERVICE_PLAN: actions-showcase-app-service-plan
        CONTAINER_NAME: actions-showcase
        WEBAPP_NAME_PREFIX: act-show-preview
        DOCKER_REGISTRY_URL: docker.pkg.github.com
        DOCKER_USERNAME: <token>
        DOCKER_PASSWORD: ${{secrets.GPR_TOKEN}}
      run: |
        az webapp create --resource-group $RESOURCE_GROUP --plan $APP_SERVICE_PLAN --name $WEBAPP_NAME_PREFIX-$GITHUB_SHA --deployment-container-image-name docker.pkg.github.com/$GITHUB_REPOSITORY/$CONTAINER_NAME:$GITHUB_SHA
        az webapp config container set --resource-group $RESOURCE_GROUP --name $WEBAPP_NAME_PREFIX-$GITHUB_SHA --docker-registry-server-password $DOCKER_PASSWORD --docker-registry-server-user $DOCKER_USERNAME --docker-registry-server-url $DOCKER_REGISTRY_URL
        az webapp update -g $RESOURCE_GROUP -n $WEBAPP_NAME_PREFIX-$GITHUB_SHA --set tags.ref=$GITHUB_REF tags.type=review
  
  azure_deploy_app:
    name: Deploy the container to the app on Azure
    needs: [container, azure_create_app]
    runs-on: ubuntu-latest
    steps:
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - uses: azure/webapps-container-deploy@v1
      with:
        app-name: ${{ format('{0}-{1}', 'act-show-preview', github.sha) }}
        images: ${{ format('{0}/{1}/{2}:{3}', 'docker.pkg.github.com', github.repository, 'actions-showcase', github.sha) }}
    - uses: actions/github-script@0.8.0
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let run = process.env.GITHUB_RUN_ID
          let log_url = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${run}`
          let environment_url = `https://act-show-preview-${process.env.GITHUB_SHA}.azurewebsites.net`
          github.repos.createDeploymentStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            mediaType: {
              previews: ["flash-preview", "ant-man"]
            },
            deployment_id: context.payload.deployment.id,
            state: 'success',
            description: 'Deployment to Azure succeeded', 
            environment_url: environment_url,
            log_url: log_url
          })
    - uses: actions/github-script@0.8.0
      if: failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let run = process.env.GITHUB_RUN_ID
          let log_url = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${run}`
          github.repos.createDeploymentStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            mediaType: {
              previews: ["flash-preview", "ant-man"]
            },
            deployment_id: context.payload.deployment.id,
            state: 'failure',
            description: 'Deployment to Azure failed'
            log_url: log_url
          })

          


        

